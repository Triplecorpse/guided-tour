services:
  db:
    image: postgis/postgis:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  test-db: # for unit/integration testing purposes
    image: postgis/postgis:latest
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass123
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  app:
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      DATABASE_USER: postgres
      DATABASE_PASSWORD: pass123
      DATABASE_NAME: postgres
      DATABASE_PORT: 5432
      DATABASE_HOST: db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      API_KEY: whatever
      PORT: 3001
      API_PORT: 3000
      JWT_SECRET: YOUR_SECRET_KEY_HERE
      JWT_AUDIENCE: localhost:3001
      JWT_ISSUER: localhost:3001
      JWT_ACCESS_TOKEN_TTL: 3600
      JWT_REFRESH_TOKEN_TTL: 86400
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run start:all
    volumes:
      - .:/app         # ðŸŸ¡ mount local dir into container
      - /app/node_modules  # ðŸ”’ prevent overwriting installed modules

volumes:
  postgres_data:
  pgadmin_data:
  redis_data: